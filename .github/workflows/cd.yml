name: CD
on:
  release:
    types:
      - created
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('**/package.json') }}
          path: |
            node_modules
            ~/.npm
      - name: Install dependencies
        if: ${{ steps.cache-dependencies.outputs.cache-hit == false }}
        run: npm i --legacy-peer-deps
      - name: Build the app
        run: npm run build
        env:
          REACT_APP_MIXPANEL_TOKEN: ${{ secrets.REACT_APP_MIXPANEL_TOKEN }}
          REACT_APP_BUGSNAG_KEY: ${{ secrets.REACT_APP_BUGSNAG_KEY }}
          REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_SENTRY_DSN }}
      - name: Save the build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Restore the build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          cname: brewmymac.sh
  check:
    runs-on: ubuntu-latest
    needs:
      - deploy
    steps:
      - name: Check the deployment
        uses: lakuapik/gh-actions-http-status@v1
        with:
          url: https://brewmymac.sh
          expected_status: '[200]'
  sentry:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('**/package.json') }}
          path: |
            node_modules
            ~/.npm
      - name: Install dependencies
        if: ${{ steps.cache-dependencies.outputs.cache-hit == false }}
        run: npm i --legacy-peer-deps
      - name: Restore the build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      - name: Create a new Sentry release
        run: ./node_modules/.bin/sentry-cli releases new 1.0.9
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      - name: Upload source maps to Sentry
        run: ./node_modules/.bin/sentry-cli releases files 1.0.9 upload-sourcemaps build --rewrite
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
